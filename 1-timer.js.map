{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nlet userSelectedDate = null;\n  \nflatpickr(\"input#datetime-picker\", {\n  enableTime: true,   \n  time_24hr: true,    \n  defaultDate: new Date(),    \n  minuteIncrement: 1,\n  enableSeconds: true,\n  // minDate: new Date(),\n  onClose(selectedDates) {      \n    userSelectedDate = selectedDates[0];    \n    console.log(\"Обраний час:\", userSelectedDate);    \n  },\n  \n});\n\nconst button = document.querySelector(\"button\");\nconst input = document.querySelector(\"#datetime-picker\");\n\nconst handleClick = () => {\n  console.log(\"The button was pressed and now the next image will appear\");\n};\n\nbutton.disabled = false;\ninput.disabled = false;\n\nbutton.addEventListener(\"click\", handleClick);\n\nconst fDays = document.querySelector(\"span[data-days]\");\nconst fHours = document.querySelector(\"span[data-hours]\");\nconst fMinutes = document.querySelector(\"span[data-minutes]\");\nconst fSeconds = document.querySelector(\"span[data-seconds]\");\n\nclass Timer {\n\n  constructor({onTick}) {\n    this.onTick = onTick;\n    this.isActive = false;\n    this.init(); \n    this.intervalID = null;\n  }\n\n  init() {\n    const time = this.getTimeComponent(0);\n    this.onTick(time);\n  }\n  start() {\n    \n    if (this.isActive ) { //&& userSelectedDate < Date.now()\n      window.alert(\"Please choose a date in the future\");\n      button.disabled = true;\n      input.disabled = true;\n      flatpickr.clickOpens = false;\n      button.classList.add(\"disabled-button\");\n      \n      return;\n      \n    }\n    this.isActive = true;\n    this.intervalID = setInterval(() => {\n      const currentTime = Date.now(); // Поточний час\n      const deltaTime = userSelectedDate - currentTime; // Скільки часу пройшло\n      if (deltaTime <= 0) {\n        clearInterval(this.intervalID); // зупинка відліку\n        this.init(); // скидання до 00        \n        this.isActive = false; // активування кнопки для повторного запуску \n        return;\n      }\n      const time = this.getTimeComponent(deltaTime) // вивидить час з відліком\n      // console.log(time); \n      this.onTick(time);\n\n    }, 1000)\n  };  \n\n  getTimeComponent(time) {    \n    const days = this.pad(Math.floor((time % (60 * 1000 * 60 * 24 * 30)) / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (60 * 1000 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (60 * 1000 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (60 * 1000)) / 1000));    \n    return {days, hours, mins, secs}\n  }\n  pad(value) {\n    return String(value).padStart(2, \"0\"); // додаємо парний нуль\n  }\n}\n  \nconst time = new Timer({onTick: updateTimeFace});\nbutton.addEventListener(\"click\", time.start.bind(time));\n\nfunction updateTimeFace({ days, hours, mins, secs }) {\n  fDays.textContent = `${days}`;\n  fHours.textContent = `${hours}`;\n  fMinutes.textContent = `${mins}`;\n  fSeconds.textContent = `${secs}`;\n\n  \n}\n\n\n\n\n\n\n\n\n\n// import flatpickr from \"flatpickr\";\n// // Додатковий імпорт стилів\n// import \"flatpickr/dist/flatpickr.min.css\";\n\n// import iziToast from \"izitoast\";\n// // Додатковий імпорт стилів\n// import \"izitoast/dist/css/iziToast.min.css\";\n\n\n// let userSelectedDate = null;\n  \n// flatpickr(\"input#datetime-picker\", {\n//   enableTime: true,   \n//   time_24hr: true,    \n//   defaultDate: new Date(),    \n//   minuteIncrement: 1,\n//   enableSeconds: true,\n//   // minDate: new Date(),\n//   onClose(selectedDates) {      \n//     userSelectedDate = selectedDates[0];    \n//     console.log(\"Обраний час:\", userSelectedDate);    \n//   },\n  \n// });\n\n\n// const button = document.querySelector(\"button\");\n// const input = document.querySelector(\"input\");\n\n// const handleClick = () => {\n//   console.log(\"The button was pressed and now the next image will appear\");\n// };\n\n// button.disabled = false;\n\n// button.addEventListener(\"click\", handleClick);\n\n// const fDays = document.querySelector(\"span[data-days]\");\n// const fHours = document.querySelector(\"span[data-hours]\");\n// const fMinutes = document.querySelector(\"span[data-minutes]\");\n// const fSeconds = document.querySelector(\"span[data-seconds]\");\n\n// class Timer {\n\n//   constructor({onTick}) {\n//     this.onTick = onTick;\n//     this.isActive = false;\n//     this.init(); \n//     this.intervalID = null;\n//   }\n\n//   init() {\n//     const ms = this.convertMs(0);\n//     this.onTick(ms);\n//   }\n//   start() {\n    \n//     if (this.isActive) {\n//       input.disabled = true;\n//       button.disabled = true;\n//       button.classList.add(\"disabled-button\");\n//       iziToast.error({\n//         title: 'Error',\n//         message: 'Please choose a date in the future',\n//       });\n      \n//       return;\n      \n//     }\n    // this.isActive = true;\n    // this.intervalID = setInterval(() => {\n    //   const currentTime = Date.now(); // Поточний час\n    //   const deltaTime = userSelectedDate - currentTime; // Скільки часу пройшло\n    //   if (deltaTime <= 0) {\n    //     clearInterval(this.intervalID); // зупинка відліку\n    //     this.init(); // скидання до 00        \n        //this.isActive = false; // активування кнопки для повторного запуску \n      //   return;\n      // }\n      // const time = this.convertMs(deltaTime) // вивидить час з відліком\n      // console.log(time); \n  //     this.onTick(time);\n\n  //   }, 1000)\n  // };  \n\n//   convertMs(ms) {  \n//     const second = 1000;\n//     const minute = second * 60;\n//     const hour = minute * 60;\n//     const day = hour * 24;\n    \n//     // Remaining days\n//     const days = Math.floor(ms / day);\n//     // Remaining hours\n//     const hours = Math.floor((ms % day) / hour);\n//     // Remaining minutes\n//     const minutes = Math.floor(((ms % day) % hour) / minute);\n//     // Remaining seconds\n//     const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n//     return {days, hours, minutes, seconds}\n//   }\n//   addLeadingZero(value) {\n//     return String(value).padStart(2, \"0\");\n//   }\n// }\n  \n// const time = new Timer({onTick: updateTimeFace});\n// button.addEventListener(\"click\", time.start.bind(time));\n\n// function updateTimeFace({ days, hours, minutes, seconds }) {\n//   fDays.textContent = `${days}`;\n//   fHours.textContent = `${hours}`;\n//   fMinutes.textContent = `${minutes}`;\n//   fSeconds.textContent = `${seconds}`;\n\n  \n// }"],"names":["userSelectedDate","flatpickr","selectedDates","button","input","handleClick","fDays","fHours","fMinutes","fSeconds","Timer","onTick","time","currentTime","deltaTime","days","hours","mins","secs","value","updateTimeFace"],"mappings":"0xBAIA,IAAIA,EAAmB,KAEvBC,EAAU,wBAAyB,CACjC,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,cAAe,GAEf,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAClC,QAAQ,IAAI,eAAgBF,CAAgB,CAC7C,CAEH,CAAC,EAED,MAAMG,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAQ,SAAS,cAAc,kBAAkB,EAEjDC,EAAc,IAAM,CACxB,QAAQ,IAAI,2DAA2D,CACzE,EAEAF,EAAO,SAAW,GAClBC,EAAM,SAAW,GAEjBD,EAAO,iBAAiB,QAASE,CAAW,EAE5C,MAAMC,EAAQ,SAAS,cAAc,iBAAiB,EAChDC,EAAS,SAAS,cAAc,kBAAkB,EAClDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAW,SAAS,cAAc,oBAAoB,EAE5D,MAAMC,CAAM,CAEV,YAAY,CAAC,OAAAC,CAAM,EAAG,CACpB,KAAK,OAASA,EACd,KAAK,SAAW,GAChB,KAAK,KAAI,EACT,KAAK,WAAa,IACnB,CAED,MAAO,CACL,MAAMC,EAAO,KAAK,iBAAiB,CAAC,EACpC,KAAK,OAAOA,CAAI,CACjB,CACD,OAAQ,CAEN,GAAI,KAAK,SAAW,CAClB,OAAO,MAAM,oCAAoC,EACjDT,EAAO,SAAW,GAClBC,EAAM,SAAW,GACjBH,EAAU,WAAa,GACvBE,EAAO,UAAU,IAAI,iBAAiB,EAEtC,MAED,CACD,KAAK,SAAW,GAChB,KAAK,WAAa,YAAY,IAAM,CAClC,MAAMU,EAAc,KAAK,MACnBC,EAAYd,EAAmBa,EACrC,GAAIC,GAAa,EAAG,CAClB,cAAc,KAAK,UAAU,EAC7B,KAAK,KAAI,EACT,KAAK,SAAW,GAChB,MACD,CACD,MAAMF,EAAO,KAAK,iBAAiBE,CAAS,EAE5C,KAAK,OAAOF,CAAI,CAEjB,EAAE,GAAI,CACR,CAED,iBAAiBA,EAAM,CACrB,MAAMG,EAAO,KAAK,IAAI,KAAK,MAAOH,EAAQ,OAA8B,KAAoB,CAAC,EACvFI,EAAQ,KAAK,IAAI,KAAK,MAAOJ,GAAQ,GAAK,IAAO,GAAK,KAAQ,IAAO,GAAK,GAAG,CAAC,EAC9EK,EAAO,KAAK,IAAI,KAAK,MAAOL,GAAQ,GAAK,IAAO,KAAQ,IAAO,GAAG,CAAC,EACnEM,EAAO,KAAK,IAAI,KAAK,MAAON,GAAQ,GAAK,KAAS,GAAI,CAAC,EAC7D,MAAO,CAAC,KAAAG,EAAM,MAAAC,EAAO,KAAAC,EAAM,KAAAC,CAAI,CAChC,CACD,IAAIC,EAAO,CACT,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CACH,CAEA,MAAMP,EAAO,IAAIF,EAAM,CAAC,OAAQU,CAAc,CAAC,EAC/CjB,EAAO,iBAAiB,QAASS,EAAK,MAAM,KAAKA,CAAI,CAAC,EAEtD,SAASQ,EAAe,CAAE,KAAAL,EAAM,MAAAC,EAAO,KAAAC,EAAM,KAAAC,CAAI,EAAI,CACnDZ,EAAM,YAAc,GAAGS,CAAI,GAC3BR,EAAO,YAAc,GAAGS,CAAK,GAC7BR,EAAS,YAAc,GAAGS,CAAI,GAC9BR,EAAS,YAAc,GAAGS,CAAI,EAGhC"}