{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst button = document.querySelector(\"button\");\nconst input = document.querySelector(\"#datetime-picker\");\n\nconst fDays = document.querySelector(\"span[data-days]\");\nconst fHours = document.querySelector(\"span[data-hours]\");\nconst fMinutes = document.querySelector(\"span[data-minutes]\");\nconst fSeconds = document.querySelector(\"span[data-seconds]\");\n\nlet userSelectedDate = null;\n\nbutton.disabled = true;\nbutton.classList.add(\"disabled-button\");\n  \nflatpickr(\"input#datetime-picker\", {\n  enableTime: true,   \n  time_24hr: true,    \n  defaultDate: new Date(),    \n  minuteIncrement: 1,\n  enableSeconds: true,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];      \n    \n    if (userSelectedDate <= Date.now()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      button.disabled = true;\n      button.classList.add(\"disabled-button\");\n      return;\n    }\n    button.disabled = false;\n    button.classList.remove(\"disabled-button\");\n  },  \n});\n\nclass Timer {\n\n  constructor({onTick}) {\n    this.onTick = onTick;\n    this.isActive = false;\n    this.refresh(); \n    this.intervalID = null;\n  }\n  refresh(ms = 0) {\n    const time = this.convertMs(ms);\n    this.onTick(time);\n  }\n  start() {      \n    if (this.isActive) { \n      return Promise.reject();      \n    }\n    this.isActive = true;\n    button.disabled = true;\n    input.disabled = true;    \n    button.classList.add(\"disabled-button\");\n    new Promise ((resolve) => { \n    this.intervalID = setInterval(() => {      \n\n      const currentTime = Date.now(); // Поточний час      \n      const deltaTime = userSelectedDate - currentTime; // Скільки часу пройшло\n      if (deltaTime <= 0) {\n        this.stop().then(resolve);\n        return;\n      } \n        const time = this.convertMs(deltaTime) // вивидить час з відліком\n        this.onTick(time);\n    }, 1000);\n    })\n  }; \n  stop() {\n    if (!this.isActive) {\n      return Promise.reject();\n    };\n    clearInterval(this.intervalID); // зупинка відліку       \n    this.isActive = false; // активування кнопки для повторного запуску     \n    button.disabled = false;    \n    input.disabled = false;    \n    button.classList.remove(\"disabled-button\");\n    this.refresh(0) // скидання до 00  \n        return Promise.resolve();\n  }\n\n  convertMs(ms) {    \n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;    \n    // Remaining days\n    const days = this.addLeadingZero(Math.floor(ms / day));\n    // Remaining hours\n    const hours = this.addLeadingZero(Math.floor((ms % day) / hour));\n    // Remaining minutes\n    const minutes = this.addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n    // Remaining seconds\n    const seconds = this.addLeadingZero(Math.floor((((ms % day) % hour) % minute) / second));\n    return { days, hours, minutes, seconds };\n  }\n  addLeadingZero(value) {\n    return String(value).padStart(2, \"0\"); // додаємо парний нуль\n  }\n}\n  \nconst time = new Timer({onTick: updateTimeFace});\nbutton.addEventListener(\"click\", time.start.bind(time));\n\n\nfunction updateTimeFace({ days, hours, minutes, seconds }) {\n  fDays.textContent = `${days}`;\n  fHours.textContent = `${hours}`;\n  fMinutes.textContent = `${minutes}`;\n  fSeconds.textContent = `${seconds}`;  \n}\n\n"],"names":["button","input","fDays","fHours","fMinutes","fSeconds","userSelectedDate","flatpickr","selectedDates","iziToast","Timer","onTick","ms","time","resolve","currentTime","deltaTime","days","hours","minutes","seconds","value","updateTimeFace"],"mappings":"+IAKA,MAAMA,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAQ,SAAS,cAAc,kBAAkB,EAEjDC,EAAQ,SAAS,cAAc,iBAAiB,EAChDC,EAAS,SAAS,cAAc,kBAAkB,EAClDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAW,SAAS,cAAc,oBAAoB,EAE5D,IAAIC,EAAmB,KAEvBN,EAAO,SAAW,GAClBA,EAAO,UAAU,IAAI,iBAAiB,EAEtCO,EAAU,wBAAyB,CACjC,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,cAAe,GACf,QAAQC,EAAe,CAGrB,GAFAF,EAAmBE,EAAc,CAAC,EAE9BF,GAAoB,KAAK,MAAO,CAClCG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDT,EAAO,SAAW,GAClBA,EAAO,UAAU,IAAI,iBAAiB,EACtC,MACD,CACDA,EAAO,SAAW,GAClBA,EAAO,UAAU,OAAO,iBAAiB,CAC1C,CACH,CAAC,EAED,MAAMU,CAAM,CAEV,YAAY,CAAC,OAAAC,CAAM,EAAG,CACpB,KAAK,OAASA,EACd,KAAK,SAAW,GAChB,KAAK,QAAO,EACZ,KAAK,WAAa,IACnB,CACD,QAAQC,EAAK,EAAG,CACd,MAAMC,EAAO,KAAK,UAAUD,CAAE,EAC9B,KAAK,OAAOC,CAAI,CACjB,CACD,OAAQ,CACN,GAAI,KAAK,SACP,OAAO,QAAQ,SAEjB,KAAK,SAAW,GAChBb,EAAO,SAAW,GAClBC,EAAM,SAAW,GACjBD,EAAO,UAAU,IAAI,iBAAiB,EACtC,IAAI,QAAUc,GAAY,CAC1B,KAAK,WAAa,YAAY,IAAM,CAElC,MAAMC,EAAc,KAAK,MACnBC,EAAYV,EAAmBS,EACrC,GAAIC,GAAa,EAAG,CAClB,KAAK,KAAI,EAAG,KAAKF,CAAO,EACxB,MACD,CACC,MAAMD,EAAO,KAAK,UAAUG,CAAS,EACrC,KAAK,OAAOH,CAAI,CACnB,EAAE,GAAI,CACX,CAAK,CACF,CACD,MAAO,CACL,OAAK,KAAK,UAGV,cAAc,KAAK,UAAU,EAC7B,KAAK,SAAW,GAChBb,EAAO,SAAW,GAClBC,EAAM,SAAW,GACjBD,EAAO,UAAU,OAAO,iBAAiB,EACzC,KAAK,QAAQ,CAAC,EACH,QAAQ,WARV,QAAQ,QASlB,CAED,UAAUY,EAAI,CAMZ,MAAMK,EAAO,KAAK,eAAe,KAAK,MAAML,EAAK,KAAG,CAAC,EAE/CM,EAAQ,KAAK,eAAe,KAAK,MAAON,EAAK,MAAO,IAAI,CAAC,EAEzDO,EAAU,KAAK,eAAe,KAAK,MAAQP,EAAK,MAAO,KAAQ,GAAM,CAAC,EAEtEQ,EAAU,KAAK,eAAe,KAAK,MAASR,EAAK,MAAO,KAAQ,IAAU,GAAM,CAAC,EACvF,MAAO,CAAE,KAAAK,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CACD,eAAeC,EAAO,CACpB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CACH,CAEA,MAAMR,EAAO,IAAIH,EAAM,CAAC,OAAQY,CAAc,CAAC,EAC/CtB,EAAO,iBAAiB,QAASa,EAAK,MAAM,KAAKA,CAAI,CAAC,EAGtD,SAASS,EAAe,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACzDlB,EAAM,YAAc,GAAGe,CAAI,GAC3Bd,EAAO,YAAc,GAAGe,CAAK,GAC7Bd,EAAS,YAAc,GAAGe,CAAO,GACjCd,EAAS,YAAc,GAAGe,CAAO,EACnC"}